"""Initial migration

Revision ID: 08084a0b5d47
Revises:
Create Date: 2025-02-22 15:59:19.943030

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "08084a0b5d47"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=256), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=True),
        sa.Column("last_name", sa.String(length=64), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "date_joined",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "last_active_time",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(
        op.f("ix_users_username"), "users", ["username"], unique=True
    )
    op.create_table(
        "posts",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("text_content", sa.String(), nullable=True),
        sa.Column("is_repost", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_posts_created_at"), "posts", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_posts_user_id"), "posts", ["user_id"], unique=False
    )
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("follower_id", sa.BIGINT(), nullable=False),
        sa.Column("followed_user_id", sa.BIGINT(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["followed_user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["follower_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "follower_id", "followed_user_id", name="unique_subscription"
        ),
    )
    op.create_index(
        op.f("ix_subscriptions_followed_user_id"),
        "subscriptions",
        ["followed_user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subscriptions_follower_id"),
        "subscriptions",
        ["follower_id"],
        unique=False,
    )
    op.create_table(
        "comments",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("post_id", sa.BIGINT(), nullable=False),
        sa.Column("text_content", sa.String(length=1024), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_comments_created_at"),
        "comments",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_comments_post_id"), "comments", ["post_id"], unique=False
    )
    op.create_index(
        op.f("ix_comments_user_id"), "comments", ["user_id"], unique=False
    )
    op.create_table(
        "images",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("post_id", sa.BIGINT(), nullable=False),
        sa.Column("src", sa.String(length=512), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_images_post_id"), "images", ["post_id"], unique=False
    )
    op.create_index(op.f("ix_images_src"), "images", ["src"], unique=False)
    op.create_index(
        op.f("ix_images_user_id"), "images", ["user_id"], unique=False
    )
    op.create_table(
        "likes",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("post_id", sa.BIGINT(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "post_id", name="unique_like"),
    )
    op.create_index(
        op.f("ix_likes_post_id"), "likes", ["post_id"], unique=False
    )
    op.create_index(
        op.f("ix_likes_user_id"), "likes", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_likes_user_id"), table_name="likes")
    op.drop_index(op.f("ix_likes_post_id"), table_name="likes")
    op.drop_table("likes")
    op.drop_index(op.f("ix_images_user_id"), table_name="images")
    op.drop_index(op.f("ix_images_src"), table_name="images")
    op.drop_index(op.f("ix_images_post_id"), table_name="images")
    op.drop_table("images")
    op.drop_index(op.f("ix_comments_user_id"), table_name="comments")
    op.drop_index(op.f("ix_comments_post_id"), table_name="comments")
    op.drop_index(op.f("ix_comments_created_at"), table_name="comments")
    op.drop_table("comments")
    op.drop_index(
        op.f("ix_subscriptions_follower_id"), table_name="subscriptions"
    )
    op.drop_index(
        op.f("ix_subscriptions_followed_user_id"), table_name="subscriptions"
    )
    op.drop_table("subscriptions")
    op.drop_index(op.f("ix_posts_user_id"), table_name="posts")
    op.drop_index(op.f("ix_posts_created_at"), table_name="posts")
    op.drop_table("posts")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
